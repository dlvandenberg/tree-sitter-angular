===============
Defer statement
===============

@defer {
  <span>Complex element</span>
}

---

(document
  (defer_statement
    (control_keyword)
    body: (statement_block
      (element
        (start_tag
          (tag_name))
        (text)
        (end_tag
          (tag_name))))))

==================
Defer with trigger
==================

@defer (on viewport) {
  <calendar-cmp/>
}

---

(document
  (defer_statement
    (control_keyword)
    (defer_trigger
      condition: (defer_trigger_condition
        (special_keyword)
        trigger: (identifier)))
    body: (statement_block
      (element
        (self_closing_tag
          (tag_name))))))

============================
Defer with multiple triggers
============================

@defer (on viewport; on timer(5s)) {
  <calendar-cmp/>
}

---

(document
  (defer_statement
    (control_keyword)
    (defer_trigger
      condition: (defer_trigger_condition
        (special_keyword)
        trigger: (identifier))
      condition: (defer_trigger_condition
        (special_keyword)
        trigger: (call_expression
          function: (identifier)
          arguments: (arguments
            (identifier)))))
    body: (statement_block
      (element
        (self_closing_tag
          (tag_name))))))

===================
Defer with prefetch
===================

@defer (on interaction; prefetch on idle) {
  <calendar-cmp/>
}

---

(document
  (defer_statement
    (control_keyword)
    (defer_trigger
      condition: (defer_trigger_condition
        (special_keyword)
        trigger: (identifier))
      condition: (defer_trigger_condition
        (prefetch_keyword)
        (special_keyword)
        trigger: (identifier)))
    body: (statement_block
      (element
        (self_closing_tag
          (tag_name))))))

==============================
Defer with conditional trigger
==============================

@defer (when users.length > 0) {
  <calendar-cmp/>
}

---

(document
  (defer_statement
    (control_keyword)
    (defer_trigger
      condition: (defer_trigger_condition
        (special_keyword)
        trigger: (binary_expression
          left: (expression
            (member_expression
              object: (identifier)
              property: (identifier)))
          right: (expression
            (identifier)))))
    body: (statement_block
      (element
        (self_closing_tag
          (tag_name))))))

===========
Placeholder
===========

@defer {
  <large-component/>
} @placeholder {
  <small-component/>
}

---

(document
  (defer_statement
    (control_keyword)
    body: (statement_block
      (element
        (self_closing_tag
          (tag_name)))))
  placeholder: (placeholder_statement
    (control_keyword)
    body: (statement_block
      (element
        (self_closing_tag
          (tag_name))))))

========================
Placeholder with minimum
========================

@defer {
  <large-component/>
} @placeholder (minimum 400ms) {
  <small-component/>
}

---

(document
  (defer_statement
    (control_keyword)
    body: (statement_block
      (element
        (self_closing_tag
          (tag_name)))))
  placeholder: (placeholder_statement
      (control_keyword)
      (placeholder_minimum
        minimum: (timed_expression
          (special_keyword)
          value: (number)
          (unit)))
      body: (statement_block
      (element
        (self_closing_tag
          (tag_name))))))

=======
Loading
=======

@defer {
  <large-component/>
} @loading {
  <loading-spinner/>
}

---

(document
  (defer_statement
    (control_keyword)
    body: (statement_block
      (element
        (self_closing_tag
          (tag_name)))))
  loading: (loading_statement
    (control_keyword)
    body: (statement_block
      (element
        (self_closing_tag
          (tag_name))))))

====================
Loading with minimum
====================

@defer {
  <large-component/>
} @loading (minimum 1s) {
  <loading-spinner/>
}

---

(document
  (defer_statement
    (control_keyword)
    body: (statement_block
      (element
        (self_closing_tag
          (tag_name)))))
  loading: (loading_statement
    (control_keyword)
    (loading_condition
      condition: (timed_expression
        (special_keyword)
        value: (number)
        (unit)))
    body: (statement_block
      (element
        (self_closing_tag
          (tag_name))))))

==================
Loading with after
==================

@defer {
  <large-component/>
} @loading (after 1s) {
  <loading-spinner/>
}

---

(document
  (defer_statement
    (control_keyword)
    body: (statement_block
      (element
        (self_closing_tag
          (tag_name)))))
  loading: (loading_statement
    (control_keyword)
    (loading_condition
      condition: (timed_expression
        (special_keyword)
        value: (number)
        (unit)))
    body: (statement_block
      (element
        (self_closing_tag
          (tag_name))))))

=========================
Loading minimum and after
=========================

@defer {
  <large-component/>
} @loading (after 1s; minimum 1s) {
  <loading-spinner/>
}

---

(document
  (defer_statement
    (control_keyword)
    body: (statement_block
      (element
        (self_closing_tag
          (tag_name)))))
  loading: (loading_statement
    (control_keyword)
    (loading_condition
      condition: (timed_expression
        (special_keyword)
        value: (number)
        (unit))
      condition: (timed_expression
        (special_keyword)
        value: (number)
        (unit)))
    body: (statement_block
      (element
        (self_closing_tag
          (tag_name))))))

=====
Error
=====

@defer {
  <large-component/>
} @error {
  <error-message/>
}

---

(document
  (defer_statement
    (control_keyword)
    body: (statement_block
      (element
        (self_closing_tag
          (tag_name)))))
  error: (error_statement
    (control_keyword)
    body: (statement_block
      (element
        (self_closing_tag
          (tag_name))))))

===============================
Defer-placeholder-loading-error
===============================

@defer (on viewport) {
  <calendar-cmp/>
} @placeholder (minimum 100ms) {
  <small-component/>
} @loading (after 100s; minimum 200ms){
  <loading-spinner/>
} @error {
  <error-message/>
}

---

(document
  (defer_statement
    (control_keyword)
    (defer_trigger
      condition: (defer_trigger_condition
        (special_keyword)
        trigger: (identifier)))
    body: (statement_block
      (element
        (self_closing_tag
          (tag_name)))))
  placeholder: (placeholder_statement
    (control_keyword)
    (placeholder_minimum
      minimum: (timed_expression
        (special_keyword)
        value: (number)
        (unit)))
    body: (statement_block
      (element
        (self_closing_tag
          (tag_name)))))
  loading: (loading_statement
      (control_keyword)
      (loading_condition
        condition: (timed_expression
          (special_keyword)
          value: (number)
          (unit))
        condition: (timed_expression
          (special_keyword)
          value: (number)
          (unit)))
    body: (statement_block
      (element
        (self_closing_tag
          (tag_name)))))
    error: (error_statement
      (control_keyword)
      body: (statement_block
        (element
          (self_closing_tag
            (tag_name))))))

===============
Consecutive Defer statement
===============

@defer {
  <span>Complex element</span>
}

@defer {
  <span>Complex element</span>
}
---

(document
  (defer_statement
    (control_keyword)
    body: (statement_block
      (element
        (start_tag
          (tag_name))
        (text)
        (end_tag
          (tag_name)))))
  (defer_statement
    (control_keyword)
    body: (statement_block
      (element
        (start_tag
          (tag_name))
        (text)
        (end_tag
          (tag_name))))))
