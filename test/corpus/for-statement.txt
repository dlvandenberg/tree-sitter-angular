=============
For-statement
=============

@for (item of items; track item.id) {
  <li>{{ item.name }}</li>
}

---

(document
  (for_statement
    (control_keyword)
    declaration: (for_declaration
      name: (identifier)
      (special_keyword)
      value: (expression
        (identifier))
      (special_keyword)
      track: (expression
        (member_expression
          object: (identifier)
          property: (identifier))))
    body: (statement_block
      (element
        (start_tag
          (tag_name))
        (interpolation
          (expression
            (member_expression
              object: (identifier)
              property: (identifier))))
        (end_tag
          (tag_name))))))

==========================
For-statement with aliases
==========================

@for (item of items; track $index; let idx = $index, e = $even) {
  <li>{{ item }}</li>
}

---

(document
  (for_statement
    (control_keyword)
    declaration: (for_declaration
      name: (identifier)
      (special_keyword)
      value: (expression
        (identifier))
      (special_keyword)
      track: (expression
        (identifier)))
    reference: (for_reference
      (special_keyword)
      alias: (assignment_expression
        name: (identifier)
        value: (expression
          (identifier)))
      alias: (assignment_expression
        name: (identifier)
        value: (expression
          (identifier))))
    body: (statement_block
      (element
        (start_tag
          (tag_name))
        (interpolation
          (expression
            (identifier)))
        (end_tag
          (tag_name))))))

==============
For with pipes
==============

@for (item of items$ | async; track item.id) {
  <li>{{ item.name }}</li>
}

---

(document
  (for_statement
    (control_keyword)
    declaration: (for_declaration
      name: (identifier)
      (special_keyword)
      value: (expression
        (identifier)
        pipes: (pipe_sequence
          (pipe_operator)
          (pipe_call
           name: (identifier))))
      (special_keyword)
      track: (expression
        (member_expression
          object: (identifier)
          property: (identifier))))
    body: (statement_block
      (element
        (start_tag
          (tag_name))
        (interpolation
          (expression
            (member_expression
              object: (identifier)
              property: (identifier))))
        (end_tag
          (tag_name))))))

=========
For-empty
=========

@for (item of items; track $index) {
  <li>{{ item }}</li>
} @empty {
  <span>No items</span>
}

---

(document
  (for_statement
    (control_keyword)
    declaration: (for_declaration
      name: (identifier)
      (special_keyword)
      value: (expression
        (identifier))
      (special_keyword)
      track: (expression
        (identifier)))
    body: (statement_block
      (element
        (start_tag
          (tag_name))
        (interpolation
          (expression
            (identifier)))
        (end_tag
          (tag_name)))))
  empty: (empty_statement
    (control_keyword)
    body: (statement_block
      (element
        (start_tag
          (tag_name))
        (text)
        (end_tag
          (tag_name))))))

=============
Consecutive For-statement
=============

@for (item of items; track item.id) {
  <li>{{ item.name }}</li>
}

@for (item of otherItems; track item.id) {
  <li>{{ item.name }}</li>
}

---

(document
  (for_statement
    (control_keyword)
    declaration: (for_declaration
      name: (identifier)
      (special_keyword)
      value: (expression
        (identifier))
      (special_keyword)
      track: (expression
        (member_expression
          object: (identifier)
          property: (identifier))))
    body: (statement_block
      (element
        (start_tag
          (tag_name))
        (interpolation
          (expression
            (member_expression
              object: (identifier)
              property: (identifier))))
        (end_tag
          (tag_name)))))
  (for_statement
    (control_keyword)
    declaration: (for_declaration
      name: (identifier)
      (special_keyword)
      value: (expression
        (identifier))
      (special_keyword)
      track: (expression
        (member_expression
          object: (identifier)
          property: (identifier))))
    body: (statement_block
      (element
        (start_tag
          (tag_name))
        (interpolation
          (expression
            (member_expression
              object: (identifier)
              property: (identifier))))
        (end_tag
          (tag_name))))))
